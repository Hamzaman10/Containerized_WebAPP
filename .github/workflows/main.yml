name: Build and push to ECR

on:
  push:
    branches: [ main ]

env:
  AWS_REGION: us-east-1
  WEBAPP_REPO: webapp
  MYSQL_REPO: mysqldb

jobs:
  build-and-push:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Configure AWS credentials (including session token)
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-session-token: ${{ secrets.AWS_SESSION_TOKEN }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Get ECR registry
        id: ecr
        run: |
          echo "registry=${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com" >> $GITHUB_OUTPUT

      - name: Ensure ECR repositories exist
        run: |
          ACCOUNT=${{ secrets.AWS_ACCOUNT_ID }}
          REGION=${{ secrets.AWS_REGION }}
          WEB=${ACCOUNT}.dkr.ecr.${REGION}.amazonaws.com/${{ env.WEBAPP_REPO }}
          DB=${ACCOUNT}.dkr.ecr.${REGION}.amazonaws.com/${{ env.MYSQL_REPO }}

          aws ecr describe-repositories --repository-names "${{ env.WEBAPP_REPO }}" --region $REGION >/dev/null 2>&1 || \
            aws ecr create-repository --repository-name "${{ env.WEBAPP_REPO }}" --region $REGION

          aws ecr describe-repositories --repository-names "${{ env.MYSQL_REPO }}" --region $REGION >/dev/null 2>&1 || \
            aws ecr create-repository --repository-name "${{ env.MYSQL_REPO }}" --region $REGION

      - name: Login to ECR
        run: |
          aws ecr get-login-password --region ${{ secrets.AWS_REGION }} \
            | docker login --username AWS --password-stdin ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com

      - name: Build MySQL image
        run: |
          IMAGE_TAG=${{ github.run_number }}-$(date +%s)
          docker build -t my_db -f Dockerfile_mysql .
          docker tag my_db:latest ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com/${{ env.MYSQL_REPO }}:${IMAGE_TAG}
          echo "MYSQL_IMAGE=${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com/${{ env.MYSQL_REPO }}:${IMAGE_TAG}" >> $GITHUB_OUTPUT

      - name: Build Webapp image
        run: |
          IMAGE_TAG=${{ github.run_number }}-$(date +%s)
          docker build -t my_app -f Dockerfile .
          docker tag my_app:latest ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com/${{ env.WEBAPP_REPO }}:${IMAGE_TAG}
          echo "WEBAPP_IMAGE=${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com/${{ env.WEBAPP_REPO }}:${IMAGE_TAG}" >> $GITHUB_OUTPUT

      - name: Push MySQL image to ECR
        run: |
          MYSQL_IMG=$(jq -r '.MYSQL_IMAGE' <<< "${{ toJson(steps) }}" 2>/dev/null) || true
          # (we store earlier in $GITHUB_OUTPUT; echo it here from env if needed)
          # Push the images we tagged above:
          docker push ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com/${{ env.MYSQL_REPO }}:$(docker images ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com/${{ env.MYSQL_REPO }} --format "{{.Tag}}" | head -n1)

      - name: Push Webapp image to ECR
        run: |
          docker push ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com/${{ env.WEBAPP_REPO }}:$(docker images ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com/${{ env.WEBAPP_REPO }} --format "{{.Tag}}" | head -n1)

      - name: Output pushed image URIs
        run: |
          echo "Pushed to ECR:"
          aws ecr describe-images --repository-name ${{ env.WEBAPP_REPO }} --region ${{ secrets.AWS_REGION }} --output json | jq -r '.imageDetails[] | .imageTags[]' || true
          aws ecr describe-images --repository-name ${{ env.MYSQL_REPO }} --region ${{ secrets.AWS_REGION }} --output json | jq -r '.imageDetails[] | .imageTags[]' || true

